#16 Write a function that takes a list of numbers, a starting base b1 and a target base b2 and interprets the list as a number in base b1 and converts it into a number in base b2 (in the form of a list-of-digits). So for example [2,1,0] in base 3 gets converted to base 10 as [2,1].
base3_number = [ 2,     1,      0]
#                3^2    3^1     3^0
# reverse [0, 1, 2]
# number_in_element(3^0) + number_in_element(3^1) + number_in_element(3^2)


def convert_3_to_10_base(number_list)
  copy = number_list.reverse
  element_place = 0
  array = []
  (copy.count).times {
    array.push(copy[element_place]*3**element_place)
    element_place += 1
  }

  new_array = array.inject(:+).to_s.split("")
  new_array2 = []
  new_array.each { |num| new_array2.push(num.to_i) }
  puts new_array2
end

convert_3_to_10_base(base3_number)
